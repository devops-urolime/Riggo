server.port=8088
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO

spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/riggo
spring.jpa.show-sql=true
spring.datasource.username=
spring.datasource.password=

#spring.datasource.data
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#logging.level.org.springframework.web=DEBUG
#spring.jpa.hibernate.ddl-auto=validate
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.redis.cache-null-values=false
spring.cache.redis.time-to-live=6000

#spring.redis.lettuce.pool.max-active=7
#spring.redis.lettuce.pool.max-idle=7
#spring.redis.lettuce.pool.min-idle=2
#spring.redis.lettuce.pool.max-wait=-1ms
#spring.redis.lettuce.shutdown-timeout=200ms

spring.cache.redis.use-key-prefix=true

# HikariCP Settings
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=15
spring.datasource.hikari.pool-name=HikariConnectionPool

#To beautify or pretty print the SQL, we can add:
spring.jpa.properties.hibernate.format_sql=true

auth0.issuer:https://riggo-qa.auth0.com/
auth0.apiAudience:load-resource-api
hashsalt=3a3cfff984c0e3d87fd2e36593c47f8d