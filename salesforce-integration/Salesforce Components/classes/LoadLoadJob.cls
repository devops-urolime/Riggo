/**
* Copyright 2014-2017 Revenova, LLC. All rights reserved.
* NOTE: INVOKE WITH BATCH SIZE OF ONE
*/
global with sharing class LoadLoadJob implements  Database.Batchable<SObject>, Database.Stateful {

    RecordType shipperConsigneeType;
    List<rtms__Load__c> loadList; 
    List<rtms__LineItem__c> itemList;
    List<rtms__CustomerQuote__c> customerQuoteList;
    List<rtms__CarrierQuote__c> carrierQuoteList;

    public LoadLoadJob() {
        shipperConsigneeType = [SELECT Id, Name FROM RecordType WHERE SObjectType = 'rtms__TransportationProfile__c' AND Name = 'Shipper/Consignee']; 
        loadList = new List<rtms__Load__c>(); 
        itemList = new List<rtms__LineItem__c>();
        customerQuoteList = new List<rtms__CustomerQuote__c>();
        carrierQuoteList  = new List<rtms__CarrierQuote__c>();
    }
    
    global Database.QueryLocator start(Database.BatchableContext context) {
        String query = 'SELECT ' + String.join(LoadJobUtil.getColumnNamesForTable(LoadBuffer2__c.SObjectType), ',') 
                     + '  FROM LoadBuffer2__c WHERE processed__c = false';
        return Database.getQueryLocator(query);    
    }    

    global void execute(Database.BatchableContext context, List<SObject> scope) {
        
        // STILL ONLY RUN WITH BATCH SIZE OF ONE !!!!

        loadList.clear(); 
        itemList.clear();
        customerQuoteList.clear();
        carrierQuoteList.clear();

        for ( sObject so : scope ) {          
            LoadBuffer2__c lb = (LoadBuffer2__c)so;
            lb.Load_Number__c =  processBufferRow(lb);
            lb.processed__c = true;
        } 

        if(itemList.size() > 0){
            insert itemList;
            System.debug('********************************* Line items inserted ' );
        }
        if(customerQuoteList.size() > 0) {
            insert customerQuoteList;
            System.debug('********************************* Line customer quote inserted ' );
        }
        if(carrierQuoteList.size() > 0){
            insert carrierQuoteList;        
            System.debug('********************************* Line carrier quote inserted ' );
        }

        update loadList;       // do this LAST - quote insert changes load status
        update scope;
        
        // update customer quotes to 'Accepted' 
        for(rtms__CustomerQuote__c cuq: customerQuoteList){
            cuq.rtms__Status__c = 'Accepted';
        }
        update customerQuoteList;
    }

    global void finish(Database.BatchableContext context) {
        AsyncApexJob a = [SELECT Id, Status, NumberOfErrors, JobItemsProcessed, TotalJobItems, CreatedBy.Email FROM AsyncApexJob WHERE Id = :context.getJobId()];
        System.debug(a);
    }


    public Id processBufferRow(LoadBuffer2__c lb) {

        // Customer Legacy Id  --  match on Customer Legacy Id (name) - ignore if not found 
//        if(lb.Customer_Name__c == null) {
        if(lb.Name == null) {
            System.debug('********************************* Customer Name is null ' );
            lb.Error_Message__c = '********************************* Customer Name is null ';
            return null;
        }
//        List<Account> customerList = [SELECT Id, Name FROM Account WHERE Name = :lb.Customer_Name__c ]; 
        List<Account> customerList = [SELECT Id, Name, Legacy_Acct_Id__c FROM Account WHERE Legacy_Acct_Id__c = :lb.Name ]; 
        if(customerList.size() == 0) {
//            System.debug('********************************* Customer Name not found ' + lb.Customer_Name__c );
//            lb.Error_Message__c = '********************************* Customer Name not found ' +  + lb.Customer_Name__c;
            System.debug('********************************* Customer Name not found ' + lb.Name );
            lb.Error_Message__c = '********************************* Customer Name not found ' +  + lb.Name;
            return null;       
        }        

        // Carrier Legacy Id  --  match on Carrier Legacy Id - ignore if not found 
//        if(lb.Carrier_Name__c == null) {
        if(lb.Carrier_Legacy_ID__c == null) {
//            System.debug('********************************* Carrier Name is null ' );
//            lb.Error_Message__c = '********************************* Carrier Name is null ';
            System.debug('********************************* Carrier Legacy Id is null ' );
            lb.Error_Message__c = '********************************* Carrier Legacy Id is null ';
            return null;
        }
//        String carrierName = lb.Carrier_Name__c.trim();
        String carrierName = lb.Carrier_Legacy_ID__c.trim();
        List<Account> carrierList = [SELECT Id, Name, Legacy_Acct_Id__c FROM Account WHERE Legacy_Acct_Id__c =: carrierName ]; 
        if(carrierList.size() == 0) {
//            System.debug('********************************* Carrier not found ' + lb.Carrier_Name__c);
//            lb.Error_Message__c = '********************************* Carrier not found ' + lb.Carrier_Name__c;
            System.debug('********************************* Carrier not found ' + lb.Carrier_Legacy_ID__c);
            lb.Error_Message__c = '********************************* Carrier not found ' + lb.Carrier_Legacy_ID__c;
            return null;       
        }        
//        List<rtms__CarrierService__c> carrierServiceList = [SELECT Id, rtms__Mode__c, rtms__Mode__r.Name FROM rtms__CarrierService__c WHERE rtms__Carrier__c = :carrierList[0].Id and rtms__Mode__r.Name =: lb.Carrier_Mode__c];
        List<rtms__CarrierService__c> carrierServiceList = [SELECT Id, rtms__Mode__c, rtms__Mode__r.Name FROM rtms__CarrierService__c WHERE rtms__Carrier__c = :carrierList[0].Id];
        if(carrierServiceList.size() == 0) {
            carrierServiceList = [SELECT Id, rtms__Mode__c FROM rtms__CarrierService__c WHERE rtms__Carrier__c = :carrierList[0].Id];
        }
        if(carrierServiceList.size() == 0) {
            System.debug('********************************* No Carrier Services found ' );
            lb.Error_Message__c = '*********************************  No Carrier Services found ';
            return null;       
        }
        // the mode on the load may not be the same as the mode for the carrier        
//        List<rtms__Mode__c> modeList = [select Id, Name from rtms__Mode__c where Name like : lb.Carrier_Mode__c];
        List<rtms__Mode__c> modeList = [select Id, Name from rtms__Mode__c where Name like : carrierServiceList[0].rtms__Mode__c];
        
        // Location 1 Name  --  match on Location 1 Name - ignore if not found 
//        if(lb.Location_1_Name__c == null) {
        if(lb.Location_1_Legacy_ID__c == null) {
            System.debug('********************************* location 1 Name is null');
            lb.Error_Message__c = '********************************* location 1 Name is null ';
            return null;
        }
//        String locName = (lb.Location_1_Name__c).trim();
//        List<Account> location1List = [SELECT Id FROM Account WHERE Name = :locName ]; 
        String locName = (lb.Location_1_Legacy_ID__c).trim();
        List<Account> location1List = [SELECT Id, Legacy_Acct_Id__c FROM Account WHERE Legacy_Acct_Id__c = :locName ]; 
        if(location1List.size() == 0) {
//            System.debug('********************************* location 1 not found ' + lb.Location_1_Name__c);
//            lb.Error_Message__c = '********************************* location 1 not found ' + lb.Location_1_Name__c;
            System.debug('********************************* location 1 not found ' + lb.Location_1_Legacy_ID__c);
            lb.Error_Message__c = '********************************* location 1 not found ' + lb.Location_1_Legacy_ID__c;
            return null;       
        }        

        // Location 2 Name  --  match on Location 2 Name - ignore if not found 
//        if(lb.Location_2_Name__c == null) {
        if(lb.Consignee_Legacy_ID__c == null) {
            System.debug('********************************* location 2 Name is null');
            lb.Error_Message__c = '********************************* location 2 is null ';
            return null;
        }
//        locName = (lb.Location_2_Name__c).trim();
//        List<Account> location2List = [SELECT Id FROM Account WHERE Name = :locName ]; 
        locName = (lb.Consignee_Legacy_ID__c).trim();
        List<Account> location2List = [SELECT Id, Legacy_Acct_Id__c FROM Account WHERE Legacy_Acct_Id__c = :locName ]; 
        if(location2List.size() == 0) {
//            System.debug('********************************* location 2 not found ' + lb.Location_2_Name__c);
//            lb.Error_Message__c = '********************************* location 2 not found ' + lb.Location_2_Name__c;
            System.debug('********************************* location 2 not found ' + lb.Consignee_Legacy_ID__c);
            lb.Error_Message__c = '********************************* location 2 not found ' + lb.Consignee_Legacy_ID__c;
            return null;       
        }         
//        System.debug('********************************* location 2 lb.Location_2_Name__c ' + lb.Location_2_Name__c);
        System.debug('********************************* location 2 lb.Location_2_Name__c ' + lb.Consignee_Legacy_ID__c);
        System.debug('********************************* location 2 location2List[0].Id ' + location2List[0].Id);
        System.debug('********************************* location 2 location2List ' + location2List);
        List<Contact> location2ContactList = [select Id from Contact where AccountId = :location2List[0].Id limit 1];

        // Location 3 Name  --  match on Location 3 Name - ignore if not found
        /* 
        List<Account> location3List = [SELECT Id FROM Account WHERE Name = :lb.Locations_3_Name__c ]; 
        List<Contact> location3ContactList = new List<Contact>();
        if(location3List.size() > 0) {
            location3ContactList = [select Id from Contact where AccountId = :location3List[0].Id limit 1];
        }

        // Location 4 Name  --  match on Location 4 Name - ignore if not found 
        List<Account> location4List = [SELECT Id FROM Account WHERE Name = :lb.Location_4_Name__c]; 
        List<Contact> location4ContactList = new List<Contact>();
        if(location4List.size() > 0) {
            location4ContactList = [select Id from Contact where AccountId = :location4List[0].Id limit 1];
        }

        // Dispatcher  --  match on Dispatcher Name - ignore if not found 
        List<User> dispatcherList = [SELECT Id FROM User WHERE Name =: lb.Dispatcher__c]; 

        // Sales Rep  --  match on Sales Rep Name - ignore if not found 
        List<User> salesRepList = [SELECT Id FROM User WHERE Name =: lb.Sales_Rep__c]; 
        */
        
        Account billTo   = customerList[0];           
        Account customer = customerList[0];

        Account shipper = location1List[0];
 
        Contact shipperContact;
        Integer contactCounter = [select count() from Contact where AccountId = :shipper.Id];

        String eqtype = (lb.Equipment_Type__c != null ? lb.Equipment_Type__c.replace('\'', '%') : '');
        List<rtms__EquipmentType__c> eqList = [select Id, Name from rtms__EquipmentType__c where Name Like: eqType];
                 
        // Load 
        // Must edit spreadsheet columns for weight and miles, since occurs multiple times
        rtms__Load__c load = new rtms__Load__c();
        load.Name                          = lb.Legacy_Load_Number__c;
        load.Historical_Load__c            = true;
        load.Legacy_Load_Number__c         = lb.Legacy_Load_Number__c;
        load.rtms__Customer__c             = customer.Id;
        load.rtms__Bill_To__c              = billTo.Id;
        load.rtms__Carrier__c              = carrierList[0].Id;
        load.rtms__Carrier_Service__c      = carrierServiceList[0].Id;

        load.rtms__Carrier_Quote_Total__c  = lb.Carrier_Quote_Line_Haul__c;     
        load.rtms__Customer_Quote_Total__c = lb.Customer_Quote_Total__c;         

        load.rtms__Load_Status__c          = 'Completed';
        Date orderDate                     = formatDate(lb.Order_Date__c); 
        load.rtms__Order_Date__c           = (orderDate != null ? orderDate : Date.today());
        load.rtms__PRO_Number__c           = lb.PRO_Number__c;
        load.rtms__Total_Weight__c         = (lb.Total_Weight__c > 0 ? lb.Total_Weight__c : 1);
        load.rtms__Weight_Units__c         = 'lbs';
        load.rtms__Mode__c                 = carrierServiceList[0].rtms__Mode__c;
        load.rtms__Equipment_Type__c       = (eqList.size() > 0 ? eqList[0].Id : null);
        
        // 03332018 new custom fields added
        //load.Dispatcher__c                 = (dispatcherList.size() > 0 ? dispatcherList[0].Id : null); 
        //load.Customer_Sales_Rep__c         = (lb.Sales_Rep__c != null ? lb.Sales_Rep__c : null); 
        //load.Sales_Rep__c                  = (salesRepList.size() > 0 ? salesRepList[0].Id : null);
        load.rtms__PO_Number__c            = (lb.Customer_PO_Number__c != null ? lb.Customer_PO_Number__c : null);
        //load.Shipper_PO_Number__c          = (lb.Shipper_PO__c != null ? lb.Shipper_PO__c : null);
        //load.Consignee_PO_Number__c        = (lb.Consignee_PO__c != null ? lb.Consignee_PO__c : null); 

        insert load;
        System.debug('********************************* Load inserted ' );


        List<rtms__Stop__c> stopList = new List<rtms__Stop__c>();

        // Stop 1        
        rtms__Stop__c firstStop = new rtms__Stop__c();
        firstStop.rtms__Load__c = load.Id;
        firstStop.rtms__Location2__c = shipper.Id;                                                               
        firstStop.Name = 'Stop 1';
        firstStop.rtms__Number__c = 1;
        firstStop.rtms__Is_Pickup__c  = lb.Location_1_Stop_is_Pickup__c;
        firstStop.rtms__Is_Dropoff__c = lb.Location_1_Stop_is_Dropoff__c;

        firstStop.rtms__Arrival_Date__c   = orderDate != null ? orderDate : Date.today();
        firstStop.rtms__Departure_Date__c = (orderDate != null ? orderDate : Date.today());
        //firstStop.rtms__Expected_Date__c = (lb.Expected_Ship_Date__c != null ? Date.parse(lb.Expected_Ship_Date__c) : Date.today());
        firstStop.rtms__Shipping_Receiving_Contact__c = shipperContact != null ? shipperContact.Id : null;  
        stopList.add(firstStop);             

        // Stop 2       
        rtms__Stop__c secondStop = new rtms__Stop__c();
        secondStop.rtms__Load__c  = load.Id;
        secondStop.rtms__Location2__c = location2List[0].Id;
        secondStop.Name = 'Stop 2';
        secondStop.rtms__Number__c = 2;
        secondStop.rtms__Is_Pickup__c  = lb.Location_2_Stop_is_Pickup__c;
        secondStop.rtms__Is_Dropoff__c = lb.Location_2_Stop_is_Dropoff__c;
//        if(location3List.size() > 0) {
//            secondStop.rtms__Arrival_Date__c   = lb.Order_Date__c != null ? Date.parse(lb.Order_Date__c) : Date.today(); 
//            secondStop.rtms__Departure_Date__c = (lb.Order_Date__c != null ? Date.parse(lb.Order_Date__c) : Date.today());
//        }
//        else {
            //secondStop.rtms__Expected_Date__c  = (lb.Expected_Delivery_Date__c != null ? Date.parse(lb.Expected_Delivery_Date__c) : Date.today());
            secondStop.rtms__Arrival_Date__c   = (orderDate != null ? orderDate : Date.today()); 
            secondStop.rtms__Departure_Date__c = (orderDate != null ? orderDate : Date.today());
//        }
        secondStop.rtms__Shipping_Receiving_Contact__c = location2ContactList.size() > 0 ? location2ContactList[0].Id : null;        
        stopList.add(secondStop);             

        // Stop 3       
        /*if(location3List.size() > 0) {
            rtms__Stop__c thirdStop = new rtms__Stop__c();
            thirdStop.rtms__Load__c  = load.Id;
            thirdStop.rtms__Location2__c = location3List[0].Id;
            thirdStop.Name = 'Stop 3';
            thirdStop.rtms__Number__c = 3;
            thirdStop.rtms__Is_Pickup__c  = false;
            thirdStop.rtms__Is_Dropoff__c = lb.Location_3_Stop_is_Dropoff__c;
            thirdStop.rtms__Arrival_Date__c   = lb.Order_Date__c != null ? Date.parse(lb.Order_Date__c) : Date.today(); 
            if(location4List.size() > 0) {
                thirdStop.rtms__Departure_Date__c = (lb.Order_Date__c != null ? Date.parse(lb.Order_Date__c) : Date.today());
            }
            else {
                thirdStop.rtms__Expected_Date__c  = (lb.Expected_Delivery_Date__c != null ? Date.parse(lb.Expected_Delivery_Date__c) : Date.today());
                thirdStop.rtms__Arrival_Date__c   = (lb.Order_Delivery_Date__c != null ? Date.parse(lb.Order_Delivery_Date__c) : Date.today()); 
                thirdStop.rtms__Departure_Date__c = (lb.Order_Delivery_Date__c != null ? Date.parse(lb.Order_Delivery_Date__c) : Date.today());
            }
            thirdStop.rtms__Shipping_Receiving_Contact__c = location3ContactList.size() > 0 ? location3ContactList[0].Id : null;
            stopList.add(thirdStop);             
        }        

        // Stop 4       
        if(location4List.size() > 0) {
            rtms__Stop__c fourthStop                       = new rtms__Stop__c();
            fourthStop.rtms__Load__c                       = load.Id;
            fourthStop.rtms__Location2__c                  = location4List[0].Id;
            fourthStop.Name                                = 'Stop 4';
            fourthStop.rtms__Number__c                     = 4;
            fourthStop.rtms__Is_Pickup__c                  = false;
            fourthStop.rtms__Is_Dropoff__c                 = lb.Location_4_Stop_is_Dropoff__c;
            fourthStop.rtms__Expected_Date__c              = (lb.Expected_Delivery_Date__c != null ? Date.parse(lb.Expected_Delivery_Date__c) : Date.today());
            fourthStop.rtms__Arrival_Date__c               = (lb.Order_Delivery_Date__c != null ? Date.parse(lb.Order_Delivery_Date__c) : Date.today()); 
            fourthStop.rtms__Departure_Date__c             = (lb.Order_Delivery_Date__c != null ? Date.parse(lb.Order_Delivery_Date__c) : Date.today());
            fourthStop.rtms__Shipping_Receiving_Contact__c = location4ContactList.size() > 0 ? location4ContactList[0].Id : null;
            stopList.add(fourthStop);             
        }*/        

        insert stopList;
        System.debug('********************************* stops inserted ' );

        // load accessorial
        if(lb.Load_Accessorial__c != null && lb.Load_Accessorial__c != ''){
            List<rtms__Accessorial__c> accessList = [select Id, Name from rtms__Accessorial__c where Name =: lb.Load_Accessorial__c];
            rtms__Accessorial__c access = new rtms__Accessorial__c();
            if(accessList.size() > 0) {
                access = accessList[0]; 
            } 
            else {
                // added the accessorial
                access = new rtms__Accessorial__c();
                access.Name = lb.Load_Accessorial__c;
                access.rtms__Customer_Portal_Selection__c = false;
                access.rtms__Enabled__c = true;
                access.rtms__Pre_Quote__c = true;
                access.rtms__Type__c = 'Load';
                access.rtms__Mode__c = modeList[0].Id;
                insert access;                     
            }
            rtms__LoadAccessorial__c laccess = new rtms__LoadAccessorial__c();
            laccess.rtms__Load__c = load.Id;
            laccess.rtms__Accessorial__c = access.Id;
            laccess.rtms__Provider__c = 'Carrier';
            laccess.Name = access.Name;
            insert laccess;
        }
        
        // Line Item    MUST EDIT SPREADHEET COLUMNS - multiple descriptions and weights     
        rtms__LineItem__c item               = new rtms__LineItem__c();
        item.rtms__Load__c                   = load.Id;
        item.Name                            = 'Item 1';
        //item.Line_Item_Legacy_Load_Number__c = Integer.valueOf(lb.Line_Item_Legacy_Load_Number__c);
        item.rtms__Item_Description__c       = (lb.Line_Item_Description__c != null ? lb.Line_Item_Description__c : 'Item');
        item.rtms__Weight__c                 = (lb.Line_Item_Weight__c != null ? lb.Line_Item_Weight__c : lb.Total_Weight__c);
        item.rtms__Handling_Units__c         = lb.Line_Item_Handling_Unit__c;
        item.rtms__Handling_Unit_Count__c    = lb.Line_Item_Handling_Unit_Count__c;
        item.rtms__Weight_Units__c           = 'lbs';
        item.rtms__Pickup_Stop__c            = firstStop.Id;
        //if(stopList.size() == 4) {
        //    item.rtms__Delivery_Stop__c      = stopList[3].Id;
        //}
        //else if(stopList.size() == 3) {
        //    item.rtms__Delivery_Stop__c      = stopList[2].Id;
        //}
        //else {
        //    item.rtms__Delivery_Stop__c      = stopList[1].Id;
        //}
        itemList.add(item);

        // customer quote
        rtms__CustomerQuote__c customerQuote = new rtms__CustomerQuote__c();
        customerQuote.rtms__Load2__c                = load.id;
        customerQuote.rtms__Status__c               = 'Quoted';
        customerQuote.rtms__Pricing__c              = lb.Customer_Quote_Pricing__c;
        customerQuote.rtms__Accessorial_Charges__c  = lb.Customer_Quote_Accessorial_Charge__c;
        customerQuote.rtms__Net_Line_Haul__c        = (lb.Customer_Quote_Line_Haul__c > 0 ? lb.Customer_Quote_Line_Haul__c : lb.Customer_Quote_Total__c) ;
        customerQuote.rtms__Fuel_Surcharge__c       = lb.Customer_Quote_Fuel_Surcharge__c; 
        customerQuote.rtms__Customer_Quote_Total__c = lb.Customer_Quote_Total__c;  //  remember a trigger will update this field - sum of the three cols above
        customerQuote.rtms__Transportation_Total__c = lb.Customer_Quote_Total__c;
        customerQuoteList.add(customerQuote);   
 
        // carrier quote
        rtms__CarrierQuote__c carrierQuote        = new rtms__CarrierQuote__c();
        carrierQuote.rtms__Vendor__c              = carrierList[0].Id;
        carrierQuote.rtms__Load__c                = load.id;
        carrierQuote.rtms__Carrier_Service__c     = carrierServiceList[0].Id;
        carrierQuote.rtms__Accepted__c            = true;
        carrierQuote.rtms__Line_Haul__c           = lb.Carrier_Quote_Line_Haul__c;
        carrierQuote.rtms__Accessorial_Charges__c = lb.Carrier_Quote_Accessorial_Charge__c;  
        carrierQuote.rtms__Fuel_Surcharge__c      = lb.Carrier_Quote_Fuel_Surcharge__c;  
        carrierQuoteList.add(carrierQuote);
        
        // switch load status back to completed
        load.rtms__Load_Status__c = 'Completed';
        loadList.add(load);
        
        return load.Id;
        
    }


    public static String deleteCreatedRows() {
    
        // newInstance(year, month, day, hour, minute, second)  //     3/3/2016 11:36 AM
        Datetime dtLow  = DateTime.newInstance(2016, 3, 2, 8, 00, 00);
        Datetime dtHigh = DateTime.newInstance(2016, 3, 2, 14, 00, 00);

        List<Account> aList = [ SELECT id, name, createdDate FROM Account WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'Accounts:  ' + alist.size() );

        List<rtms__TransportationProfile__c> tpList = [ SELECT id  FROM rtms__TransportationProfile__c WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'Tps: ' + tplist.size() );

        List<rtms__CustomerQuote__c> customerQuotes = [ SELECT id  FROM rtms__CustomerQuote__c WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'Customer Quotes:  ' + customerQuotes.size() );

        List<rtms__CarrierQuote__c> carrierQuotes = [ SELECT id  FROM rtms__carrierQuote__c WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'Carrier Quotes:  ' + carrierQuotes.size() );

        List<rtms__Load__c> loadList = [ SELECT id  FROM rtms__Load__c WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'Loads:  ' + loadList.size() );

        List<rtms__Stop__c> stopsList = [ SELECT id  FROM rtms__Stop__c WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'Stops:  ' + stopsList.size() );

        List<rtms__LineItem__c> lineItems = [ SELECT id  FROM rtms__LineItem__c WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'LineItems:  ' + LineItems.size() );

        List<rtms__CarrierService__c> carrierServiceList = [ SELECT id  FROM rtms__CarrierService__c WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'Carrier Services:  ' + carrierServiceList.size() );


        //delete carrierQuotes;  ( ONLY IF LOADED CARRIERS AT SAME TIME !!)
        //delete carrierServiceList;  ( ONLY IF LOADED CARRIERS AT SAME TIME !!)
        //delete loadList;
        //delete customerQuotes;
        //delete tpList;
        //delete aList;
    
        return  alist.size() + '';  
    }


    public static void deleteBuffer(){
        List<LoadBuffer2__c> bufferRows = [SELECT id FROM LoadBuffer2__c];
        system.debug('Buffer Rows:  ' + bufferRows.size() );
        //delete bufferRows;    
    }
    public static void fixLoadStuff() {
        // 3/2/2016 2:03
        Datetime dtLow  = DateTime.newInstance(2016, 3, 2, 13, 00, 00);
        Datetime dtHigh = DateTime.newInstance(2016, 3, 2, 15, 10, 00);     
        List<rtms__Load__c> loadList = [ SELECT id  FROM rtms__Load__c WHERE CreatedDate > :dtLow and CreatedDate < :dtHigh ];
        system.debug( 'Loads:  ' + loadList.size() );
        
        for ( rtms__Load__c load : loadList ) {
            load.rtms__Load_Status__c = 'Completed';
        }       
        
        //update loadList;
    }


    public static void fakeFlip() {
        List<LoadBuffer2__c> bufferRows = [SELECT id FROM LoadBuffer2__c  ];   //WHERE Bill_To_Name__c LIKE 'Cost%'
        for ( LoadBuffer2__c buffer : bufferRows ) {
            buffer.Processed__c = false;
        }
        update bufferRows;
        System.debug('Flags Flipped:  ' + bufferRows.size() );
    }


    public static void runJob() {
        LoadLoadJob myJob = new LoadLoadJob();
        Database.executeBatch(myJob,1);
    }
    public String getCountry(String state){
        if(state != null){
            return 'United States';
        }
        else if(state == 'ON' || state == 'QC' || state == 'NS' || state == 'NB' || state == 'MB' || state == 'BC' || state == 'PE' ||
                state == 'SK' || state == 'AB' || state == 'NL'){
            return 'Canada';
        }
        else {
            return 'United States';
        }
    }
    public String getCountryCode(String state){
        if(state != null){
            return 'US';
        }
        else if(state == 'ON' || state == 'QC' || state == 'NS' || state == 'NB' || state == 'MB' || state == 'BC' || state == 'PE' ||
                state == 'SK' || state == 'AB' || state == 'NL'){
            return 'CA';
        }
        else {
            return 'US';
        }
    }
    public Date formatDate(String myDate){
        Date myNewDate;
        try{
            myNewDate = Date.parse(myDate);
        }
        catch(Exception e){
            return null;
        }
        return myNewDate;
    }
    public static integer getBatchSizeX(){
        String x = '';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        x = x + 'a';
        return 1;
    }

}

// EOF